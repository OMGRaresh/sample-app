name: Sonar-TEST
env:
  AWS_REGION_NAME: "eu-central-1"
  IMAGE_NAME: ${{secrets.AWS_ECR}}.${{secrets.AWS_ECR_NAME}}

on:
  push:
    branches:
      - 'stage'

jobs:
  # Run code tests before building the image, to ensure it is good to go
  testing_step:
    name: Run code tests
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    - name: Setting up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 ruff
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Initalize and seed the database
      run: |
        flask db upgrade
        python seed.py
    - name: Lint the code with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with unittest
      run: |
        python -m unittest discover
        echo "Testing finished successfully"
  #Build and push the Docker image

  building_step:
    name: Building image
    runs-on: ubuntu-latest
    needs: testing_step


    steps:
    - name: Configure AWS connections
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{secrets.MY_PRIVATE_AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.MY_PRIVATE_AWS_SECRET_ACCESS_KEY}}
        aws-region: ${{env.AWS_REGION_NAME}}
    - uses: actions/checkout@v3

    - name: Connection to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.MY_PRIVATE_AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.MY_PRIVATE_AWS_SECRET_ACCESS_KEY}}

    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  sonarcloud:
    needs: building_step
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@v1.3
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
        args: >
            -Dproject.settings=../sonar-project.properties/
            -Dsonar.verbose=true